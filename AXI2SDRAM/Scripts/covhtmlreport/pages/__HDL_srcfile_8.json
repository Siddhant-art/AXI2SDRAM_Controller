var g_sourceLines = [
'',
'module async_fifo_1#(parameter SIZE=32,WIDTH=6,DEPTH=60)(',
'        input rd_clk,',
'        input wr_clk,',
'        input reset_n,',
'        input rd_en,',
'        input wr_en,',
'        input data_in,',
'        output data_out,',
'        output fifo_empty,',
'        output fifo_full',
'    );',
'    ',
'    reg data_out_reg;',
'    reg [WIDTH-1:0] rd_ptr;',
'    reg [WIDTH-1:0] wr_ptr;',
'    reg Data [DEPTH-1:0];',
'    ',
'    ',
'    reg [WIDTH-1:0] temp_rd_ptr;',
'    reg [WIDTH-1:0] temp_wr_ptr;',
'    reg [WIDTH-1:0] temp_rd_ptr_1;',
'    reg [WIDTH-1:0] temp_rd_ptr_2;',
'    reg [WIDTH-1:0] temp_wr_ptr_1;',
'    reg [WIDTH-1:0] temp_wr_ptr_2;',
'    ',
'    //fifo write operation',
'    always@(posedge wr_clk,negedge reset_n)',
'    begin',
'        if(!reset_n) begin',
'            wr_ptr&lt;=0;',
'            Data[wr_ptr+1]&lt;=\'h00;',
'        end ',
'        else if(wr_en &amp;&amp; !fifo_full) begin',
'            Data[wr_ptr]&lt;=data_in;',
'            wr_ptr&lt;=wr_ptr+1;',
'        end',
'    end',
'    ',
'    //fifo read operation',
'    always@(posedge rd_clk,negedge reset_n)',
'    begin',
'        if(!reset_n) begin',
'            rd_ptr&lt;=0;',
'            data_out_reg&lt;=0; ',
'        end  ',
'        else if(rd_en &amp;&amp; !fifo_empty) begin',
'            data_out_reg&lt;=Data[rd_ptr];',
'            rd_ptr&lt;=rd_ptr+1;',
'        end',
'    end',
'    ',
'    always@(posedge rd_clk,negedge reset_n)',
'    begin',
'        if(!reset_n) begin',
'             temp_wr_ptr&lt;=0;',
'             temp_wr_ptr_1&lt;=0;',
'             temp_wr_ptr_2&lt;=0;',
'        end  ',
'        else begin',
'            temp_wr_ptr&lt;=wr_ptr;',
'            temp_wr_ptr_1&lt;=temp_wr_ptr;',
'            temp_wr_ptr_2&lt;=temp_wr_ptr_1;',
'        end',
'    end',
'    ',
'    always@(posedge wr_clk,negedge reset_n)',
'    begin',
'        if(!reset_n) begin',
'             temp_rd_ptr&lt;=0;',
'             temp_rd_ptr_1&lt;=0;',
'             temp_rd_ptr_2&lt;=0;',
'        end  ',
'        else begin',
'            temp_rd_ptr&lt;=rd_ptr;',
'            temp_rd_ptr_1&lt;=temp_rd_ptr;',
'            temp_rd_ptr_2&lt;=temp_rd_ptr_1;',
'        end',
'    end',
'    ',
'    assign data_out = data_out_reg;',
'    assign fifo_full = (wr_ptr  == temp_rd_ptr_2 + DEPTH);',
'    assign fifo_empty = (temp_wr_ptr_2 == rd_ptr);',
'    ',
'endmodule',
''
];
countinueBuildStmtTable(g_sourceLines);
